{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","id","saveBook","savedBooks","post","deleteBook","delete","Jumbotron","_ref","children","react_default","a","createElement","className","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","SavedResult","props","length","savedbook","key","_id","title","src","image","alt","authors","description","onClick","handleDeleteButton","href","link","target","SaveBook","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Jumbotron","components_SavedResult","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","components_SearchForm","components_SearchResult","NoMatch","role","aria-label","Nav","App","react_router_dom","components_Nav","react_router","exact","path","component","SaveBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cccf80bb.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default {\r\n    // Get book from google search \r\n    getGoogleSearchBooks: function(query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\r\n    },\r\n\r\n    // Gets all books\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    // Gets the book with the given id\r\n    getBook: function (id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n\r\n    // Saves a book to the database\r\n    saveBook: function (savedBooks) {\r\n        return axios.post(\"/api/books\", savedBooks);\r\n    },\r\n\r\n    // Deletes the book with the given id\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\r\n            <div className=\"container text-center\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\"\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SavedResult = props => {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                    {props.savedBooks.map(savedbook => {\r\n                        return (\r\n                            <li className=\"saved-list list-group-item\" key={savedbook._id}>\r\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\r\n                                    {/* col-3 show image of the book */}\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={savedbook.image} alt={savedbook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\"/>\r\n                                    {/* col-9 show information of the book */}\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row className=\"buttonDiv \">\r\n                                    <button className=\"deleteBook btn btn-danger\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\r\n                                        Delete Book\r\n                                    </button>\r\n                                    <a href={savedbook.link} target=\"_blank\">\r\n                                        <button className=\"viewBook btn btn-success\">\r\n                                            View Book\r\n                                        </button>\r\n                                    </a>\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SavedResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container} from \"../components/Grid\";\r\nimport SavedResult from \"../components/SavedResult\"\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    //when this component mounts, grab all books that were save to the database \r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //function to remove book by id\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Jumbotron />\r\n                <Container>\r\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SaveBook ","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchForm = props => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"BookSearchLabel\"><h3>Search For Book</h3></label>\r\n                <br></br>\r\n                <input className=\"col-12 form-control\"\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"searchBook\"\r\n                    placeholder=\"Enter Book's Name\"\r\n                    onChange={props.handleInputChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SearchResult = props => {\r\n    return (props.books.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Search Results</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"card\">\r\n                <div className=\"card-body player\">\r\n                    <div className=\"article\">\r\n                        <h3>Search Results</h3>\r\n                        {props.books.map(book => {\r\n                            return (\r\n                                <li className=\"search-list list-group-item\" key={book._id}>\r\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\r\n                                        {/* col-3 show image of the book */}\r\n                                        <Col size=\"2\" className=\"bookImage\">\r\n                                            <img src={book.image} alt={book.title} />\r\n                                        </Col>\r\n                                        <Col size=\"1\" className=\"emptyCol\"/>\r\n                                        {/* col-9 show information of the book */}\r\n                                        <Col size=\"9\" className=\"bookInfo\">\r\n                                            <Row>\r\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <p className=\"bookDescription\">{book.description}</p>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                    <Row className=\"buttonDiv \">\r\n                                        <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                            Save Book\r\n                                        </button>\r\n                                        <a href={book.link} target=\"_blank\">\r\n                                            <button className=\"viewBook btn btn-success\">\r\n                                                View Book\r\n                                        </button>\r\n                                        </a>\r\n                                    </Row>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\nexport default SearchResult","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    //create state\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response in a array\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result.id,\r\n                            id: result.id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSavedButton = event => {\r\n        // console.log(event)\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Jumbotron>\r\n                    <h1 className=\"text-white\">Find Your Favorite Books with GoogleBook API</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchBooks","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1 className=\"text-white\">404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Google Book Search</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-danger text-white\">Search Books</button></a>\r\n                    </li>\r\n                    <li className=\"nav-item\" id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-primary text-white\">Saved Books</button></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SaveBooks from \"./pages/SaveBooks\";\r\nimport SearchBooks from \"./pages/SearchBooks\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Nav from \"./components/Nav\";\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SearchBooks} />\r\n          <Route exact path=\"/saved\" component={SaveBooks} />\r\n          <Route exact path=\"/saved/:id\" component={SaveBooks} />\r\n          <Route component={NoMatch} /> \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}